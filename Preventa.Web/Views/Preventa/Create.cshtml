@model Preventa.Modelos.Sistema.Tablas.Preventa.PreventaEncabezado

@{
    ViewData["Title"] = "Create";
}


<div class="row">
    <div class="col-sm-8 mb-2">


        <div class="card">
            <div class="card-header">
                Productos
            </div>
            <div class="card-body">
                @*<div class="row">

                <div class="input-group col-sm-12">
                <div class="input-group-prepend">
                <label class="input-group-text">Producto</label>
                </div>
                <select id="cmbProducto" class="custom-select" required="required" class="form-control" asp-items="ViewBag.ListaProductos"></select>

                <div class="text-end">
                <button class="btn-primary" id="btnAgregarDetalle">Agregar</button>
                </div>

                </div>


                </div>*@


                <div class="row align-items-end">
                    <div class="col-sm-8">
                        <label class="form-label">Producto</label>
                        <select id="cmbProducto" class="custom-select" required="required" class="form-control" asp-items="ViewBag.ListaProductos"></select>
                    </div>

                    <div class="col-sm-2">
                        <label class="form-label">Cantidad</label>
                        <input class="form-control form-control-sm" type="text" id="txtcantidad">
                    </div>
                    <div class="col-sm-2">
                        <button class="btn btn-success btn-sm" id="btnAgregarDetalle">Agregar</button>
                    </div>
                </div>
                <span id="ErrorDetalle" class="text-danger"></span>
                <br />
                <div class="row">
                    <div class="col-sm-12 text-end">
                        <button class="btn btn-primary me-2" id="btnGuardar"><i class="bi bi-currency-dollar"></i> Terminar Venta</button>
                        @*<button class="btn btn-danger" id="btnLimpiarLista"><i class="bi bi-x-circle-fill"></i> Limpiar Lista</button>*@
                    </div>
                </div>

                <hr />
                <div class="row">
                    <div class="col-sm-12">
                        <table id="tabla" class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Producto</th>
                                    <th style="width: 80px;">Cantidad</th>
                                    <th>Precio</th>
                                    <th>Sub total</th>
                                    <th style="width: 50px;"></th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>


                </div>
            </div>
        </div>


    </div>

    <div class="col-sm-4">

        <div class="row mt-2">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        Cliente
                    </div>
                    <div class="card-body">
                        <select asp-for="IdCliente" id="cmbCliente" class="custom-select" required="required" class="form-control" asp-items="ViewBag.ListaClientes"></select>
                        <span class="text-danger">@Html.ValidationMessageFor(d=> d.IdCliente)</span>
                    </div>
                    <div class="form-group" style="margin:10px;">
                        <label asp-for="Observacion" class="control-label"></label>
                        <input id="txtObservacion" asp-for="Observacion" class="form-control" />
                        <span asp-validation-for="Observacion" class="text-danger"></span>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-sm-6">
                                Detalle
                            </div>
                            <div class="col-sm-6 text-end">
                                <p id="pVentaTotal" class="text-warning fw-bold m-0 p-0"></p>

                            </div>
                        </div>

                    </div>
                    <div class="card-body">


                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <label class="input-group-text" for="inputGroupSelect01">Tipo de pago</label>
                            </div>
                            <select asp-for="Contado" class="custom-select" id="cmbTipo">
                                <option value="True" selected>Contado</option>
                                <option value="False">Credito</option>
                            </select>
                        </div>


                        <hr />


                        <div class="input-group input-group-sm mb-2">
                            <span class="input-group-text bg-primary">Sub Total</span>
                            <input type="text" id="txtSubTotal" placeholder="0.00" class="form-control form-control-sm text-end fw-bold" disabled>
                        </div>
                        <div class="input-group input-group-sm mb-2">
                            <span class="input-group-text bg-primary">IGV (15%)</span>
                            <input type="text" id="txtIgv" placeholder="0.00" class="form-control form-control-sm text-end fw-bold" disabled>
                        </div>
                        <div class="input-group input-group-sm mb-2">
                            <span class="input-group-text bg-primary">Total</span>
                            <input type="text" id="txtTotal" placeholder="0.00" class="form-control form-control-sm text-end fw-bold" disabled>
                        </div>
                    </div>
                </div>
            </div>
        </div>



    </div>
</div>
<div>
    <a asp-action="Index">Atrás</a>
</div>

<script>

    var productos = [];
    $('#btnAgregarDetalle').click(function () {
        let idproducto = $('#cmbProducto option:selected').val();
        AgregarProducto(idproducto);
    });


    function MostrarPrecios(tipoPago = false) {
        let subtotal = "";
        let base = "";
        let igv = "";

        igv = 0;
        Object.keys(productos).forEach(index => {
            if (productos[index].Excento) {
            } else {

                igv = igv + ((productos[index].PrecioVenta * productos[index].Cantidad) * 0.15);
            }
        });

        subtotal = productos.reduce(function (accumulator, item) {
            return accumulator + item.Total
        }, 0);

        //igv = subtotal * 0.15;
        base = subtotal + igv;

        //$("#pVentaTotal").html("S/. " + total.toFixed(2))
        $("#txtSubTotal").val("C$/. " + + parseFloat(subtotal).toFixed(2));
        $("#txtIgv").val("C$/. " + parseFloat(igv).toFixed(2));
        $("#txtTotal").val("C$/. " + parseFloat(base).toFixed(2));

        //if (tipoPago) {
        //    $("#txtPagoCon").val("S/. " + total.toFixed(2))
        //    $("#txtCambio").val("S/. 0.00")
        //}
    };

    function AgregarProducto(idproducto) {

        $('#ErrorDetalle').empty();
        let cantidad = $('#txtcantidad').val();

        if (cantidad.length <= 0) {
            Error = true;
            $('#ErrorDetalle').append('Debe ingresar cantidad');
            return;
        }
        else if (cantidad <= 0) {
            Error = true;
            $('#ErrorDetalle').append('Debe ingresar cantidad mayo que cero');
            return;
        }


        $.ajax({
            url: "@Url.Action("ObtenerProducto","Preventa")?idproducto=" + idproducto,
            type: "GET",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) 
            {
                const existe = productos.some(element => element.IdProducto === data.id);

                console.log(existe);
                if (existe) {
                    Object.keys(productos).forEach(index => {
                        //console.log(productos[index]);
                        if (productos[index].IdProducto === data.id) {
                            productos[index] = {
                                IdProducto: data.id,
                                Descripcion: data.descripcion,
                                PrecioVenta: data.precioUnitario,
                                Cantidad: cantidad,//productos[index].Cantidad + 1,
                                Total: data.precioUnitario * cantidad,
                                Excento: data.excento
                            }
                        }
                    });

                } else {
                    var producto = {
                        IdProducto: data.id,
                        Descripcion: data.descripcion,
                        PrecioVenta: data.precioUnitario,
                        Cantidad: cantidad,
                        Total: cantidad * data.precioUnitario,
                        Excento: data.excento
                    }
                    productos.push(producto);
                }

                $("#tabla tbody").html("");

                $.each(productos, function (i, item) {

                    $("<tr>").append(
                        $("<td>").append(item.Descripcion),
                        $("<td>").append(item.Cantidad),
                        //$("<td>").append($("<input>").value(item.Cantidad)),
                        $("<td>").append(item.PrecioVenta),
                        $("<td>").append(item.Total),
                        $("<td>").append(
                            $("<button>").addClass("btn btn-danger btn-eliminar btn-sm").append(
                                $("<i>").addClass("fa-trash")
                            )
                        ),
                    ).data("idproducto", item.IdProducto).appendTo("#tabla tbody")
                })


                MostrarPrecios();
            },
            error: function (error) {
                console.log("bad")
            }
        })

    }

    $('#btnGuardar').click(function () {
        Guardar();
    });

    function Guardar() {
        var ListaDetalle = [];

        Object.keys(productos).forEach(index => {
            ListaDetalle.push({
                IdProducto: productos[index].IdProducto,
                Cantidad: productos[index].Cantidad,
                Precio: productos[index].PrecioVenta,
                IvaPorcentaje: (productos[index].Excento) ? 15 : 0,
                DescuentoPorcentaje: 0
            });
        });


        

        console.log(ListaDetalle);
        jQuery.ajax({
            data: JSON.stringify({
                IdCliente: $('#cmbCliente option:selected').val(),
                Contado: $('#cmbTipo option:selected').val(),
                Observacion: $('#txtObservacion').val(),
                PreventaDetalle: ListaDetalle
            }),
            type: 'POST',
            url: '@Url.Action("Create", "Preventa")',
            //headers: {
            //    "RequestVerificationToken": AddAntiforgeryToken()
            //},
            contentType: false,
            processData: false,
            cache: false,
            async: false,
            success: function (data) 
            {

                if (data.exitoso == 1) {
                    Swal.fire({
                        title: 'Preventa',
                        text: 'Preventa realizada correctamente',
                        icon: 'success',
                        confirmButtonText: 'Aceptar'
                    }).then(function () {
                        window.location.replace(data.redirectToUrl);
                    });
                }
                else if (data.exitoso == 2) {
                    Swal.fire({
                        title: 'Preventa',
                        text: data.mensaje,
                        icon: 'error',
                        confirmButtonText: 'Aceptar'
                    });
                }
                else if (data.exitoso == 0) {
                    Swal.fire({
                        title: 'Preventa',
                        text: 'Ocurrió un problema, favor intentar más tarde.',
                        icon: 'error',
                        confirmButtonText: 'Aceptar'
                    });
                }
            },
            error: function (data) {
                HoldOn.close();
                Swal.fire({
                    title: 'Preventa',
                    text: 'Ocurrió un problema, favor intentar más tarde.',
                    icon: 'error',
                    confirmButtonText: 'Aceptar'
                });
            },
            failure: function (data) {
                HoldOn.close();
                Swal.fire({
                    title: 'Preventa',
                    text: 'Ocurrió un probema, favor intentar más tarde.',
                    icon: 'error',
                    confirmButtonText: 'Aceptar'
                });
            }
        });
        //function Guardar() {
        //    var ListaDetalle = [];

        //    Object.keys(productos).forEach(index => {
        //        ListaDetalle.push({
        //            IdProducto: productos[index].IdProducto,
        //            Cantidad: productos[index].Cantidad,
        //            Precio: productos[index].PrecioVenta,
        //            IvaPorcentaje: (productos[index].Excento) ? 15 : 0,
        //            Total: data.precioUnitario * cantidad,
        //            DescuentoPorcentaje: 0
        //        });
        //        console.log(ListaDetalle);

        //


    }


</script>